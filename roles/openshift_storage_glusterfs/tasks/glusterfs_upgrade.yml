---
- import_tasks: heketi_get_key.yml
  when: glusterfs_heketi_admin_key is undefined

- name: Delete heketi resources
  oc_obj:
    namespace: "{{ glusterfs_namespace }}"
    kind: "{{ item.kind }}"
    name: "{{ item.name | default(omit) }}"
    selector: "{{ item.selector | default(omit) }}"
    state: absent
  with_items:
  - kind: "template,svc,route,dc,secret,sa"
    selector: "heketi"
  - kind: "template,svc,route,dc,secret,sa"
    selector: "deploy-heketi"
  failed_when: False

- name: Wait for heketi pod to delete
  oc_obj:
    namespace: "{{ glusterfs_namespace }}"
    kind: pod
    state: list
    selector: "heketi"
  register: heketi_pod_wait
  until:
  - "heketi_pod_wait.results.results[0]['items'] | count == 0"
  delay: 10
  retries: "{{ (glusterfs_timeout | int / 10) | int }}"

- name: Delete other glusterfs resources
  oc_obj:
    namespace: "{{ glusterfs_namespace }}"
    kind: "{{ item.kind }}"
    name: "{{ item.name | default(omit) }}"
    selector: "{{ item.selector | default(omit) }}"
    state: absent
  with_items:
  - kind: "template,svc,route,clusterrole,sa,dc"
    selector: "glusterfs"
  - kind: "clusterrolebinding"
    name: "glusterblock-provisioner"
  - kind: "clusterrolebinding"
    name: "glusterblock-{{ glusterfs_name }}-provisioner"
  failed_when: False

# oc delete --cascade=false seems broken for DaemonSets.
# Using curl to talk to the API directly.
- name: Delete glusterfs daemonset w/o cascade
  shell: "curl -k -X DELETE https://localhost:8443/apis/extensions/v1beta1/namespaces/{{ glusterfs_namespace }}/daemonsets/glusterfs-storage -d '{\"kind\":\"DeleteOptions\",\"apiVersion\":\"v1\",\"propagationPolicy\":\"Orphan\"}' -H \"Accept: application/json\" -H \"Content-Type: application/json\"  --cert {{ openshift.common.config_base }}/master/admin.crt --key {{ openshift.common.config_base }}//master/admin.key"
  #shell: "{{ first_master_client_binary }} --config={{ openshift.common.config_base }}/master/admin.kubeconfig delete ds --namespace={{ glusterfs_namespace }} --cascade=false --selector=glusterfs"
  delegate_to: "{{ groups.oo_first_master.0 }}"
  failed_when: False

- name: Get old-style GlusterFS pods
  oc_obj:
    namespace: "{{ glusterfs_namespace }}"
    kind: pod
    state: list
    selector: "glusterfs=pod"
  register: glusterfs_old_pods

- name: Relabel old-style GlusterFS pods
  oc_label:
    name: "{{ item.metadata.name }}"
    namespace: "{{ glusterfs_namespace }}"
    kind: pod
    state: add
    labels: "[ { 'key': 'glusterfs', 'value': '{{ glusterfs_name }}'-pod } ]"
  with_items: "{{ glusterfs_old_pods.results.results[0]['items'] | default([]) }}"

- import_tasks: glusterfs_common.yml

- block:
  - name: Get GlusterFS pods
    oc_obj:
      namespace: "{{ glusterfs_namespace }}"
      kind: pod
      state: list
      selector: "glusterfs={{ glusterfs_name }}-pod"
    register: glusterfs_pods_get

  - name: Set GlusterFS CLI
    set_fact:
      glusterfs_cli: "{{ glusterfs_pod_rsh }}gluster"
    vars:
      glusterfs_pod_name: "{% if glusterfs_is_native %}{{ glusterfs_pods_get.results.results[0]['items'][0].metadata.name }}{% endif %}"
      glusterfs_pod_rsh: "{% if glusterfs_is_native %}{{ openshift_client_binary }} --config={{ mktemp.stdout }}/admin.kubeconfig rsh --namespace={{ glusterfs_namespace }} {{ glusterfs_pod_name }} {% endif %}"

  - name: Get cluster current op version
    shell: "{{ glusterfs_cli }} volume get all cluster.op-version | grep cluster.op-version | awk '{ print $2 }'"
    register: glusterfs_op_version
    changed_when: false

  - name: Get cluster max op version
    shell: "{{ glusterfs_cli }} volume get all cluster.max-op-version | grep cluster.max-op-version | awk '{ print $2 }'"
    register: glusterfs_max_op_version
    changed_when: false

  - name: Set cluster op version on all volumes
    command: "{{ glusterfs_cli }} volume set all cluster.op-version {{ max_op_version }}"
    vars:
      op_version: "{{ glusterfs_op_version.stdout }}"
      max_op_version: "{{ glusterfs_max_op_version.stdout }}"
    when: max_op_version | int > op_version | int
  when: glusterfs_is_native
