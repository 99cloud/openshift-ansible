---
- name: get existing machineset name
  yedit:
    state: list
    content: "{{ item | to_yaml }}"
    key: "metadata.name"
  register: machineset_name

- name: edit machineset name
  yedit:
    content: "{{ item | to_yaml }}"
    separator: '#'
    state: present
    edits:
    - key: metadata#name
      value: "{{ machineset_name.result }}-centos"
    - key: metadata#resourceVersion
      value: ""
    - key: spec#selector#matchLabels#sigs.k8s.io/cluster-api-machineset
      value: "{{ machineset_name.result }}-centos"
    - key: spec#template#metadata#labels#sigs.k8s.io/cluster-api-machineset
      value: "{{ machineset_name.result }}-centos"
    - key: spec#template#metadata#labels#sigs.k8s.io/cluster-api-machineset
      value: "{{ machineset_name.result }}-centos"
    - key: spec#template#spec#providerSpec#value#keyName
      value: "{{ openshift_aws_scaleup_key }}"
    - key: spec#template#spec#providerSpec#value#ami#id
      value: "{{ openshift_aws_scaleup_ami }}"
  register: edited_machineset

- name: import machinespec
  k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    definition: "{{ edited_machineset.result[-1].edit }}"

- name: wait for machine to be created
  k8s_facts:
    api_version: machine.openshift.io/v1beta1
    kubeconfig: "{{ kubeconfig_path }}"
    namespace: openshift-machine-api
    kind: Machine
    label_selectors:
    - "sigs.k8s.io/cluster-api-machineset={{ machineset_name.result }}-centos"
  register: new_machine
  retries: 36
  delay: 5
  until:
  - new_machine.resources is defined
  - new_machine.resources | length > 0
  - new_machine.resources[0].status is defined
  - new_machine.resources[0].status.providerStatus is defined
  - new_machine.resources[0].status.providerStatus.instanceState is defined
  - new_machine.resources[0].status.providerStatus.instanceState == 'running'

- name: add machine to the inventory
  add_host:
    name: "{{ new_machine.resources[0].status.addresses | selectattr('type', 'match', '^InternalIP$') | map(attribute='address') | first }}"
    node_name: "{{ new_machine.resources[0].status.addresses | selectattr('type', 'match', '^InternalDNS$') | map(attribute='address') | first }}"
    groups: new_workers
    ansible_ssh_common_args: "-o ProxyCommand=\"ssh -o IdentityFile='{{ openshift_aws_scaleup_key_path | default('/opt/app-root/src/.ssh/id_rsa') }}' -o StrictHostKeyChecking=no -W %h:%p -q core@{{ ssh_bastion }}\""
